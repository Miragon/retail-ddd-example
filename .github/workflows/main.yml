name: Build Container & Helm Chart

on:
  push:
  pull_request:
    types: [ opened, reopened ]
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # ─────────────────────────── PREP ───────────────────────────
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Java 21 (Corretto) + Gradle cache
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: '21'
          cache: gradle

      # ──────────────── GENERATE A SINGLE BUILD TAG ───────────────
      - name: Compute build tag  (YYYY-MMDD-HHMMSS)
        id: vars
        run: |
          Y=$(date -u '+%Y')
          M=$(date -u '+%-m')
          D=$(date -u '+%-d')
          H=$(date -u '+%-H')
          N=$(date -u '+%-M')
          S=$(date -u '+%-S')
          MD=$(( M * 100 + D ))
          HHMMSS=$(( H * 10000 + N * 100 + S ))
          echo "TAG_SEMANTIC=${Y}.${MD}.${HHMMSS}" >> "$GITHUB_OUTPUT"
          echo "TAG=${Y}-${MD}-${HHMMSS}" >> "$GITHUB_OUTPUT"
          echo "Using tag: $TAG"

      # ─────────────────────── TESTS ──────────────────────────────
      - name: Unit / integration tests
        run: ./gradlew --no-daemon test

      # ────────────────────── DOCKER BUILD ───────────────────────
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (no push)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: services/hello-service/Dockerfile
          tags: hello-service:${{ steps.vars.outputs.TAG }}
          push: false
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false

      # ────────────────────── HELM PACKAGE ───────────────────────
      - name: Install Helm
        uses: azure/setup-helm@v4

      - name: Package Helm chart with same version
        run: |
          helm lint charts/hello-service
          helm package charts/hello-service \
            --destination charts/ \
            --version "${{ steps.vars.outputs.TAG_SEMANTIC }}" \
            --app-version "${{ steps.vars.outputs.TAG }}"
          echo "Chart packaged: hello-service-${{ steps.vars.outputs.TAG }}.tgz"
